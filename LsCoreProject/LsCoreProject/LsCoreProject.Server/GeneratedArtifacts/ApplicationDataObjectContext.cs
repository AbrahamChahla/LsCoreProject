//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "MenuTile_Icon", "Icon", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.Icon), "MenuTile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.MenuTile), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "MenuTile_Menu", "Menu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Menu), "MenuTile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.MenuTile), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ApplicationData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ApplicationData object using the connection string found in the 'ApplicationData' section of the application configuration file.
        /// </summary>
        public ApplicationData() : base("name=ApplicationData", "ApplicationData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationData object.
        /// </summary>
        public ApplicationData(string connectionString) : base(connectionString, "ApplicationData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationData object.
        /// </summary>
        public ApplicationData(EntityConnection connection) : base(connection, "ApplicationData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Icon> Icons
        {
            get
            {
                if ((_Icons == null))
                {
                    _Icons = base.CreateObjectSet<Icon>("Icons");
                }
                return _Icons;
            }
        }
        private ObjectSet<Icon> _Icons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Menu> Menus
        {
            get
            {
                if ((_Menus == null))
                {
                    _Menus = base.CreateObjectSet<Menu>("Menus");
                }
                return _Menus;
            }
        }
        private ObjectSet<Menu> _Menus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuTile> MenuTiles
        {
            get
            {
                if ((_MenuTiles == null))
                {
                    _MenuTiles = base.CreateObjectSet<MenuTile>("MenuTiles");
                }
                return _MenuTiles;
            }
        }
        private ObjectSet<MenuTile> _MenuTiles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Icons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIcons(Icon icon)
        {
            base.AddObject("Icons", icon);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Menus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenus(Menu menu)
        {
            base.AddObject("Menus", menu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuTiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuTiles(MenuTile menuTile)
        {
            base.AddObject("MenuTiles", menuTile);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Icon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Icon : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Icon object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Icon CreateIcon(global::System.Int32 id, global::System.String name, global::System.Byte[] rowVersion)
        {
            Icon icon = new Icon();
            icon.Id = id;
            icon.Name = name;
            icon.RowVersion = rowVersion;
            return icon;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "MenuTile_Icon", "MenuTile")]
        public EntityCollection<MenuTile> MenuTiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuTile>("LightSwitchApplication.MenuTile_Icon", "MenuTile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuTile>("LightSwitchApplication.MenuTile_Icon", "MenuTile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Menu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Menu object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="screen">Initial value of the Screen property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Menu CreateMenu(global::System.Int32 id, global::System.String name, global::System.String screen, global::System.Byte[] rowVersion)
        {
            Menu menu = new Menu();
            menu.Id = id;
            menu.Name = name;
            menu.Screen = screen;
            menu.RowVersion = rowVersion;
            return menu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Screen
        {
            get
            {
                return _Screen;
            }
            set
            {
                OnScreenChanging(value);
                ReportPropertyChanging("Screen");
                _Screen = value;
                ReportPropertyChanged("Screen");
                OnScreenChanged();
            }
        }
        private global::System.String _Screen;
        partial void OnScreenChanging(global::System.String value);
        partial void OnScreenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "MenuTile_Menu", "MenuTile")]
        public EntityCollection<MenuTile> MenuTiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuTile>("LightSwitchApplication.MenuTile_Menu", "MenuTile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuTile>("LightSwitchApplication.MenuTile_Menu", "MenuTile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MenuTile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuTile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuTile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tileColor">Initial value of the TileColor property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="menuTile_Menu">Initial value of the MenuTile_Menu property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static MenuTile CreateMenuTile(global::System.Int32 id, global::System.String tileColor, global::System.String type, global::System.String name, global::System.String size, global::System.Int32 menuTile_Menu, global::System.Byte[] rowVersion)
        {
            MenuTile menuTile = new MenuTile();
            menuTile.Id = id;
            menuTile.TileColor = tileColor;
            menuTile.Type = type;
            menuTile.Name = name;
            menuTile.Size = size;
            menuTile.MenuTile_Menu = menuTile_Menu;
            menuTile.RowVersion = rowVersion;
            return menuTile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = value;
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _Order;
        partial void OnOrderChanging(Nullable<global::System.Int32> value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TileColor
        {
            get
            {
                return _TileColor;
            }
            set
            {
                OnTileColorChanging(value);
                ReportPropertyChanging("TileColor");
                _TileColor = value;
                ReportPropertyChanged("TileColor");
                OnTileColorChanged();
            }
        }
        private global::System.String _TileColor;
        partial void OnTileColorChanging(global::System.String value);
        partial void OnTileColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = value;
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = value;
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OnClick
        {
            get
            {
                return _OnClick;
            }
            set
            {
                OnOnClickChanging(value);
                ReportPropertyChanging("OnClick");
                _OnClick = value;
                ReportPropertyChanged("OnClick");
                OnOnClickChanged();
            }
        }
        private global::System.String _OnClick;
        partial void OnOnClickChanging(global::System.String value);
        partial void OnOnClickChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusBgColor
        {
            get
            {
                return _StatusBgColor;
            }
            set
            {
                OnStatusBgColorChanging(value);
                ReportPropertyChanging("StatusBgColor");
                _StatusBgColor = value;
                ReportPropertyChanged("StatusBgColor");
                OnStatusBgColorChanged();
            }
        }
        private global::System.String _StatusBgColor;
        partial void OnStatusBgColorChanging(global::System.String value);
        partial void OnStatusBgColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusFgColor
        {
            get
            {
                return _StatusFgColor;
            }
            set
            {
                OnStatusFgColorChanging(value);
                ReportPropertyChanging("StatusFgColor");
                _StatusFgColor = value;
                ReportPropertyChanged("StatusFgColor");
                OnStatusFgColorChanged();
            }
        }
        private global::System.String _StatusFgColor;
        partial void OnStatusFgColorChanging(global::System.String value);
        partial void OnStatusFgColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Badge
        {
            get
            {
                return _Badge;
            }
            set
            {
                OnBadgeChanging(value);
                ReportPropertyChanging("Badge");
                _Badge = value;
                ReportPropertyChanged("Badge");
                OnBadgeChanged();
            }
        }
        private global::System.String _Badge;
        partial void OnBadgeChanging(global::System.String value);
        partial void OnBadgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BadgeBgColor
        {
            get
            {
                return _BadgeBgColor;
            }
            set
            {
                OnBadgeBgColorChanging(value);
                ReportPropertyChanging("BadgeBgColor");
                _BadgeBgColor = value;
                ReportPropertyChanged("BadgeBgColor");
                OnBadgeBgColorChanged();
            }
        }
        private global::System.String _BadgeBgColor;
        partial void OnBadgeBgColorChanging(global::System.String value);
        partial void OnBadgeBgColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BadgeFgColor
        {
            get
            {
                return _BadgeFgColor;
            }
            set
            {
                OnBadgeFgColorChanging(value);
                ReportPropertyChanging("BadgeFgColor");
                _BadgeFgColor = value;
                ReportPropertyChanged("BadgeFgColor");
                OnBadgeFgColorChanged();
            }
        }
        private global::System.String _BadgeFgColor;
        partial void OnBadgeFgColorChanging(global::System.String value);
        partial void OnBadgeFgColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IconBgColor
        {
            get
            {
                return _IconBgColor;
            }
            set
            {
                OnIconBgColorChanging(value);
                ReportPropertyChanging("IconBgColor");
                _IconBgColor = value;
                ReportPropertyChanged("IconBgColor");
                OnIconBgColorChanged();
            }
        }
        private global::System.String _IconBgColor;
        partial void OnIconBgColorChanging(global::System.String value);
        partial void OnIconBgColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IconFgColor
        {
            get
            {
                return _IconFgColor;
            }
            set
            {
                OnIconFgColorChanging(value);
                ReportPropertyChanging("IconFgColor");
                _IconFgColor = value;
                ReportPropertyChanged("IconFgColor");
                OnIconFgColorChanged();
            }
        }
        private global::System.String _IconFgColor;
        partial void OnIconFgColorChanging(global::System.String value);
        partial void OnIconFgColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                OnPermissionIdChanging(value);
                ReportPropertyChanging("PermissionId");
                _PermissionId = value;
                ReportPropertyChanged("PermissionId");
                OnPermissionIdChanged();
            }
        }
        private global::System.String _PermissionId;
        partial void OnPermissionIdChanging(global::System.String value);
        partial void OnPermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuTile_Menu
        {
            get
            {
                return _MenuTile_Menu;
            }
            set
            {
                OnMenuTile_MenuChanging(value);
                ReportPropertyChanging("MenuTile_Menu");
                _MenuTile_Menu = value;
                ReportPropertyChanged("MenuTile_Menu");
                OnMenuTile_MenuChanged();
            }
        }
        private global::System.Int32 _MenuTile_Menu;
        partial void OnMenuTile_MenuChanging(global::System.Int32 value);
        partial void OnMenuTile_MenuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MenuTile_Icon
        {
            get
            {
                return _MenuTile_Icon;
            }
            set
            {
                OnMenuTile_IconChanging(value);
                ReportPropertyChanging("MenuTile_Icon");
                _MenuTile_Icon = value;
                ReportPropertyChanged("MenuTile_Icon");
                OnMenuTile_IconChanged();
            }
        }
        private Nullable<global::System.Int32> _MenuTile_Icon;
        partial void OnMenuTile_IconChanging(Nullable<global::System.Int32> value);
        partial void OnMenuTile_IconChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = value;
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = value;
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = value;
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = value;
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "MenuTile_Menu", "Menu")]
        public Menu Menu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("LightSwitchApplication.MenuTile_Menu", "Menu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("LightSwitchApplication.MenuTile_Menu", "Menu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Menu> MenuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("LightSwitchApplication.MenuTile_Menu", "Menu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Menu>("LightSwitchApplication.MenuTile_Menu", "Menu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "MenuTile_Icon", "Icon")]
        public Icon Icon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Icon>("LightSwitchApplication.MenuTile_Icon", "Icon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Icon>("LightSwitchApplication.MenuTile_Icon", "Icon").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Icon> IconReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Icon>("LightSwitchApplication.MenuTile_Icon", "Icon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Icon>("LightSwitchApplication.MenuTile_Icon", "Icon", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
