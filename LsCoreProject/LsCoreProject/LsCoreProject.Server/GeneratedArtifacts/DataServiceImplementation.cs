//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using global::System.Linq;

namespace LightSwitchApplication.Implementation
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationDataDataService
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataService<global::LightSwitchApplication.Implementation.ApplicationData>
    {
    
        public ApplicationDataDataService() : base()
        {
        }
    
        protected override global::Microsoft.LightSwitch.IDataService GetDataService(global::Microsoft.LightSwitch.IDataWorkspace dataWorkspace)
        {
            return ((global::LightSwitchApplication.DataWorkspace)dataWorkspace).ApplicationData;
        }
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationDataServiceImplementation
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation<global::LightSwitchApplication.Implementation.ApplicationData>
    {
        public ApplicationDataServiceImplementation(global::Microsoft.LightSwitch.IDataService dataService) : base(dataService)
        {
        }
    
    #region Queries
        public global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.MenuTile> TilesForMenu(string menuName)
        {
            global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.MenuTile> query;
            query = global::System.Linq.Queryable.ThenBy(
                global::System.Linq.Queryable.OrderBy(
                    global::System.Linq.Queryable.Where(
                        this.GetQuery<global::LightSwitchApplication.Implementation.MenuTile>("MenuTiles"),
                        (m) => (m.Menu.Name.CompareTo(menuName) == 0)),
                    (m) => m.Order),
                (m) => m.Name);
            return query;
        }
    
    #endregion

    #region Protected Methods
        protected override object CreateObject(global::System.Type type)
        {
            if (type == typeof(global::LightSwitchApplication.Implementation.Icon))
            {
                return new global::LightSwitchApplication.Implementation.Icon();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Menu))
            {
                return new global::LightSwitchApplication.Implementation.Menu();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.MenuTile))
            {
                return new global::LightSwitchApplication.Implementation.MenuTile();
            }
    
            return base.CreateObject(type);
        }
    
        protected override global::LightSwitchApplication.Implementation.ApplicationData CreateObjectContext()
        {
            string assemblyName = global::System.Reflection.Assembly.GetExecutingAssembly().GetName().Name;
            return new global::LightSwitchApplication.Implementation.ApplicationData(this.GetEntityConnectionString(
                "_IntrinsicData",
                "res://" + assemblyName + "/ApplicationData.csdl|res://" + assemblyName + "/ApplicationData.ssdl|res://" + assemblyName + "/ApplicationData.msl",
                "System.Data.SqlClient",
                true));
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Icon))
            {
                return new global::LightSwitchApplication.Implementation.Icon();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Menu))
            {
                return new global::LightSwitchApplication.Implementation.Menu();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.MenuTile))
            {
                return new global::LightSwitchApplication.Implementation.MenuTile();
            }
            return null;
        }
    
    #endregion
    
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class LsSecurityDataDataService
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataService<global::LightSwitchApplication.Implementation.LsSecurityData>
    {
    
        public LsSecurityDataDataService() : base()
        {
        }
    
        protected override global::Microsoft.LightSwitch.IDataService GetDataService(global::Microsoft.LightSwitch.IDataWorkspace dataWorkspace)
        {
            return ((global::LightSwitchApplication.DataWorkspace)dataWorkspace).LsSecurityData;
        }
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class LsSecurityDataServiceImplementation
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.AstoriaDataServiceImplementation<global::LightSwitchApplication.Implementation.LsSecurityData, global::LsSecurityData.LsSecurityDataService.SecurityData>
    {
        public LsSecurityDataServiceImplementation(global::Microsoft.LightSwitch.IDataService dataService) : base(dataService)
        {
        }
    
    #region Queries
        public global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.UserRegistration> NonSecurityAdministrators()
        {
            global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.UserRegistration> query;
            query = global::System.Linq.Queryable.OrderBy(
                this.GetQuery<global::LightSwitchApplication.Implementation.UserRegistration>("UserRegistrations"),
                (u) => u.FullName);
            return query;
        }
    
        public global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.UserRegistration> CurrentUser()
        {
            global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.UserRegistration> query;
            query = this.GetQuery<global::LightSwitchApplication.Implementation.UserRegistration>("UserRegistrations");
            return query;
        }
    
    #endregion

    #region Protected Methods
        protected override object CreateObject(global::System.Type type)
        {
            if (type == typeof(global::LightSwitchApplication.Implementation.Permission))
            {
                return new global::LightSwitchApplication.Implementation.Permission();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.RoleAssignment))
            {
                return new global::LightSwitchApplication.Implementation.RoleAssignment();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.RolePermission))
            {
                return new global::LightSwitchApplication.Implementation.RolePermission();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Role))
            {
                return new global::LightSwitchApplication.Implementation.Role();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.UserRegistration))
            {
                return new global::LightSwitchApplication.Implementation.UserRegistration();
            }
    
            return base.CreateObject(type);
        }
    
        protected override global::LightSwitchApplication.Implementation.LsSecurityData CreateObjectContext()
        {
            string assemblyName = global::System.Reflection.Assembly.GetExecutingAssembly().GetName().Name;
            return new global::LightSwitchApplication.Implementation.LsSecurityData(this.GetEntityConnectionString(
                "LsSecurityData",
                "res://" + assemblyName + "/LsSecurityData.csdl|res://" + assemblyName + "/LsSecurityData.ssdl|res://" + assemblyName + "/LsSecurityData.msl",
                "System.Data.SqlClient",
                true));
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Permission))
            {
                return new global::LightSwitchApplication.Implementation.Permission();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.RoleAssignment))
            {
                return new global::LightSwitchApplication.Implementation.RoleAssignment();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.RolePermission))
            {
                return new global::LightSwitchApplication.Implementation.RolePermission();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Role))
            {
                return new global::LightSwitchApplication.Implementation.Role();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserRegistration))
            {
                return new global::LightSwitchApplication.Implementation.UserRegistration();
            }
            return null;
        }
    
        protected override string WebConfigurationConnectionStringName
        {
            get
            {
                return "LsSecurityData";
            }
        }
    
        protected override global::System.Type ConvertType(global::System.Type outerType)
        {
            if (outerType == typeof(global::LightSwitchApplication.Implementation.Permission))
            {
                return typeof(global::LsSecurityData.LsSecurityDataService.Permission);
            }
            if (outerType == typeof(global::LightSwitchApplication.Implementation.RoleAssignment))
            {
                return typeof(global::LsSecurityData.LsSecurityDataService.RoleAssignment);
            }
            if (outerType == typeof(global::LightSwitchApplication.Implementation.RolePermission))
            {
                return typeof(global::LsSecurityData.LsSecurityDataService.RolePermission);
            }
            if (outerType == typeof(global::LightSwitchApplication.Implementation.Role))
            {
                return typeof(global::LsSecurityData.LsSecurityDataService.Role);
            }
            if (outerType == typeof(global::LightSwitchApplication.Implementation.UserRegistration))
            {
                return typeof(global::LsSecurityData.LsSecurityDataService.UserRegistration);
            }
            return base.ConvertType(outerType);
        }
    
        protected override object ConvertEntity(object outerEntity)
        {
            global::LightSwitchApplication.Implementation.Permission permission = outerEntity as global::LightSwitchApplication.Implementation.Permission;
            if (permission != null)
            {
                global::LsSecurityData.LsSecurityDataService.Permission result = new global::LsSecurityData.LsSecurityDataService.Permission();
                result.Id = permission.Id;
                result.Name = permission.Name;
                return result;
            }
            global::LightSwitchApplication.Implementation.RoleAssignment roleAssignment = outerEntity as global::LightSwitchApplication.Implementation.RoleAssignment;
            if (roleAssignment != null)
            {
                global::LsSecurityData.LsSecurityDataService.RoleAssignment result = new global::LsSecurityData.LsSecurityDataService.RoleAssignment();
                result.UserName = roleAssignment.UserName;
                result.RoleName = roleAssignment.RoleName;
                result.SourceAccountName = roleAssignment.SourceAccountName;
                return result;
            }
            global::LightSwitchApplication.Implementation.RolePermission rolePermission = outerEntity as global::LightSwitchApplication.Implementation.RolePermission;
            if (rolePermission != null)
            {
                global::LsSecurityData.LsSecurityDataService.RolePermission result = new global::LsSecurityData.LsSecurityDataService.RolePermission();
                result.RoleName = rolePermission.RoleName;
                result.PermissionId = rolePermission.PermissionId;
                return result;
            }
            global::LightSwitchApplication.Implementation.Role role = outerEntity as global::LightSwitchApplication.Implementation.Role;
            if (role != null)
            {
                global::LsSecurityData.LsSecurityDataService.Role result = new global::LsSecurityData.LsSecurityDataService.Role();
                result.Name = role.Name;
                return result;
            }
            global::LightSwitchApplication.Implementation.UserRegistration userRegistration = outerEntity as global::LightSwitchApplication.Implementation.UserRegistration;
            if (userRegistration != null)
            {
                global::LsSecurityData.LsSecurityDataService.UserRegistration result = new global::LsSecurityData.LsSecurityDataService.UserRegistration();
                result.UserName = userRegistration.UserName;
                result.FullName = userRegistration.FullName;
                result.Password = userRegistration.Password;
                return result;
            }
            return null;
        }
    
        protected override void UpdateResult(object outerEntity, object innerResult)
        {
            global::LightSwitchApplication.Implementation.Permission outerPermission = outerEntity as global::LightSwitchApplication.Implementation.Permission;
            global::LsSecurityData.LsSecurityDataService.Permission innerPermission = innerResult as global::LsSecurityData.LsSecurityDataService.Permission;
            if ((outerPermission != null) && (innerPermission != null))
            {
                outerPermission.Id = innerPermission.Id;
                outerPermission.Name = innerPermission.Name;
                return;
            }
            global::LightSwitchApplication.Implementation.RoleAssignment outerRoleAssignment = outerEntity as global::LightSwitchApplication.Implementation.RoleAssignment;
            global::LsSecurityData.LsSecurityDataService.RoleAssignment innerRoleAssignment = innerResult as global::LsSecurityData.LsSecurityDataService.RoleAssignment;
            if ((outerRoleAssignment != null) && (innerRoleAssignment != null))
            {
                outerRoleAssignment.UserName = innerRoleAssignment.UserName;
                outerRoleAssignment.RoleName = innerRoleAssignment.RoleName;
                outerRoleAssignment.SourceAccountName = innerRoleAssignment.SourceAccountName;
                return;
            }
            global::LightSwitchApplication.Implementation.RolePermission outerRolePermission = outerEntity as global::LightSwitchApplication.Implementation.RolePermission;
            global::LsSecurityData.LsSecurityDataService.RolePermission innerRolePermission = innerResult as global::LsSecurityData.LsSecurityDataService.RolePermission;
            if ((outerRolePermission != null) && (innerRolePermission != null))
            {
                outerRolePermission.RoleName = innerRolePermission.RoleName;
                outerRolePermission.PermissionId = innerRolePermission.PermissionId;
                return;
            }
            global::LightSwitchApplication.Implementation.Role outerRole = outerEntity as global::LightSwitchApplication.Implementation.Role;
            global::LsSecurityData.LsSecurityDataService.Role innerRole = innerResult as global::LsSecurityData.LsSecurityDataService.Role;
            if ((outerRole != null) && (innerRole != null))
            {
                outerRole.Name = innerRole.Name;
                return;
            }
            global::LightSwitchApplication.Implementation.UserRegistration outerUserRegistration = outerEntity as global::LightSwitchApplication.Implementation.UserRegistration;
            global::LsSecurityData.LsSecurityDataService.UserRegistration innerUserRegistration = innerResult as global::LsSecurityData.LsSecurityDataService.UserRegistration;
            if ((outerUserRegistration != null) && (innerUserRegistration != null))
            {
                outerUserRegistration.UserName = innerUserRegistration.UserName;
                outerUserRegistration.FullName = innerUserRegistration.FullName;
                outerUserRegistration.Password = innerUserRegistration.Password;
                return;
            }
            base.UpdateResult(outerEntity, innerResult);
        }
    
    #endregion
    
    }
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __DataServiceFactory :
        global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationDataService))
            {
                return new global::LightSwitchApplication.ApplicationDataService();
            }
            if (dataServiceType == typeof(global::LightSwitchApplication.LsSecurityDataService))
            {
                return new global::LightSwitchApplication.LsSecurityDataService();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationDataService))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationDataServiceImplementation(dataService);
            }
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.LsSecurityDataService))
            {
                return new global::LightSwitchApplication.Implementation.LsSecurityDataServiceImplementation(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Icon) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Icon);
            }
            if (typeof(global::LightSwitchApplication.Menu) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Menu);
            }
            if (typeof(global::LightSwitchApplication.MenuTile) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.MenuTile);
            }
            if (typeof(global::LightSwitchApplication.Permission) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Permission);
            }
            if (typeof(global::LightSwitchApplication.RoleAssignment) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.RoleAssignment);
            }
            if (typeof(global::LightSwitchApplication.RolePermission) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.RolePermission);
            }
            if (typeof(global::LightSwitchApplication.Role) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Role);
            }
            if (typeof(global::LightSwitchApplication.UserRegistration) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserRegistration);
            }
            return null;
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Icon :
        global::LightSwitchApplication.Icon.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.ICreatedModifiedPropertiesImplementation
    
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Icon.DetailsClass.IImplementation.MenuTiles
        {
            get
            {
                return this.MenuTiles;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Menu :
        global::LightSwitchApplication.Menu.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.ICreatedModifiedPropertiesImplementation
    
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Menu.DetailsClass.IImplementation.MenuTiles
        {
            get
            {
                return this.MenuTiles;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class MenuTile :
        global::LightSwitchApplication.MenuTile.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.ICreatedModifiedPropertiesImplementation
    
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.MenuTile.DetailsClass.IImplementation.Menu
        {
            get
            {
                return this.Menu;
            }
            set
            {
                this.Menu = (global::LightSwitchApplication.Implementation.Menu)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Menu");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.MenuTile.DetailsClass.IImplementation.Icon
        {
            get
            {
                return this.Icon;
            }
            set
            {
                this.Icon = (global::LightSwitchApplication.Implementation.Icon)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Icon");
                }
            }
        }
        
        partial void OnMenuTile_MenuChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Menu");
            }
        }
        
        partial void OnMenuTile_IconChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Icon");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Permission :
        global::LightSwitchApplication.Permission.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation
    {
    
        [global::System.Runtime.Serialization.DataMember]
        public string Microsoft_LightSwitch_ETag
        {
            get;
            set;
        }
    
        string global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation.ETag
        {
            get { return this.Microsoft_LightSwitch_ETag; }
            set { this.Microsoft_LightSwitch_ETag = value; }
        }
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Permission.DetailsClass.IImplementation.RolePermissions
        {
            get
            {
                return this.RolePermissions;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class RoleAssignment :
        global::LightSwitchApplication.RoleAssignment.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation
    {
    
        [global::System.Runtime.Serialization.DataMember]
        public string Microsoft_LightSwitch_ETag
        {
            get;
            set;
        }
    
        string global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation.ETag
        {
            get { return this.Microsoft_LightSwitch_ETag; }
            set { this.Microsoft_LightSwitch_ETag = value; }
        }
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.RoleAssignment.DetailsClass.IImplementation.User
        {
            get
            {
                return this.User;
            }
            set
            {
                this.User = (global::LightSwitchApplication.Implementation.UserRegistration)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("User");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.RoleAssignment.DetailsClass.IImplementation.SourceAccount
        {
            get
            {
                return this.SourceAccount;
            }
            set
            {
                this.SourceAccount = (global::LightSwitchApplication.Implementation.UserRegistration)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("SourceAccount");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.RoleAssignment.DetailsClass.IImplementation.Role
        {
            get
            {
                return this.Role;
            }
            set
            {
                this.Role = (global::LightSwitchApplication.Implementation.Role)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Role");
                }
            }
        }
        
        partial void OnUserNameChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("User");
            }
        }
        
        partial void OnSourceAccountNameChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("SourceAccount");
            }
        }
        
        partial void OnRoleNameChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Role");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class RolePermission :
        global::LightSwitchApplication.RolePermission.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation
    {
    
        [global::System.Runtime.Serialization.DataMember]
        public string Microsoft_LightSwitch_ETag
        {
            get;
            set;
        }
    
        string global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation.ETag
        {
            get { return this.Microsoft_LightSwitch_ETag; }
            set { this.Microsoft_LightSwitch_ETag = value; }
        }
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.RolePermission.DetailsClass.IImplementation.Role
        {
            get
            {
                return this.Role;
            }
            set
            {
                this.Role = (global::LightSwitchApplication.Implementation.Role)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Role");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.RolePermission.DetailsClass.IImplementation.Permission
        {
            get
            {
                return this.Permission;
            }
            set
            {
                this.Permission = (global::LightSwitchApplication.Implementation.Permission)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("Permission");
                }
            }
        }
        
        partial void OnRoleNameChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Role");
            }
        }
        
        partial void OnPermissionIdChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("Permission");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Role :
        global::LightSwitchApplication.Role.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation
    {
    
        [global::System.Runtime.Serialization.DataMember]
        public string Microsoft_LightSwitch_ETag
        {
            get;
            set;
        }
    
        string global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation.ETag
        {
            get { return this.Microsoft_LightSwitch_ETag; }
            set { this.Microsoft_LightSwitch_ETag = value; }
        }
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.Role.DetailsClass.IImplementation.RoleAssignments
        {
            get
            {
                return this.RoleAssignments;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.Role.DetailsClass.IImplementation.RolePermissions
        {
            get
            {
                return this.RolePermissions;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class UserRegistration :
        global::LightSwitchApplication.UserRegistration.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation
    {
    
        [global::System.Runtime.Serialization.DataMember]
        public string Microsoft_LightSwitch_ETag
        {
            get;
            set;
        }
    
        string global::Microsoft.LightSwitch.Internal.IAstoriaEntityImplementation.ETag
        {
            get { return this.Microsoft_LightSwitch_ETag; }
            set { this.Microsoft_LightSwitch_ETag = value; }
        }
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.UserRegistration.DetailsClass.IImplementation.RoleAssignments
        {
            get
            {
                return this.RoleAssignments;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.UserRegistration.DetailsClass.IImplementation.DerivingRoleAssignments
        {
            get
            {
                return this.DerivingRoleAssignments;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
}

