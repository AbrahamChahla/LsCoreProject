

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class MenuTile : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the MenuTile entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MenuTile()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MenuTile(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.MenuTile> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.MenuTile.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MenuTile_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MenuTile_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Order
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Order);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Order, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TileColor
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.TileColor);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.TileColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TileColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TileColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TileColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Size
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Size);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Size, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Size_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Size_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Size_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OnClick
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.OnClick);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.OnClick, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnClick_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnClick_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnClick_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StatusBgColor
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.StatusBgColor);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.StatusBgColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBgColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBgColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBgColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StatusFgColor
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.StatusFgColor);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.StatusFgColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusFgColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusFgColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusFgColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Badge
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Badge);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Badge, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Badge_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Badge_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Badge_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BadgeBgColor
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.BadgeBgColor);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.BadgeBgColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BadgeBgColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BadgeBgColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BadgeBgColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BadgeFgColor
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.BadgeFgColor);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.BadgeFgColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BadgeFgColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BadgeFgColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BadgeFgColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IconBgColor
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.IconBgColor);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.IconBgColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IconBgColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IconBgColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IconBgColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IconFgColor
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.IconFgColor);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.IconFgColor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IconFgColor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IconFgColor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IconFgColor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PermissionId
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.PermissionId);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.PermissionId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PermissionId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PermissionId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PermissionId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Menu Menu
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Menu);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Menu, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Menu_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Menu_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Menu_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Icon Icon
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Icon);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Icon, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Icon_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Icon_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Icon_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Permission Permission
        {
            get
            {
                return global::LightSwitchApplication.MenuTile.DetailsClass.GetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Permission);
            }
            set
            {
                global::LightSwitchApplication.MenuTile.DetailsClass.SetValue(this, global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Permission, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permission_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permission_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permission_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.MenuTile,
                global::LightSwitchApplication.MenuTile.DetailsClass,
                global::LightSwitchApplication.MenuTile.DetailsClass.IImplementation,
                global::LightSwitchApplication.MenuTile.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass>.Entry
                __MenuTileEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass>.Entry(
                    global::LightSwitchApplication.MenuTile.DetailsClass.__MenuTile_CreateNew,
                    global::LightSwitchApplication.MenuTile.DetailsClass.__MenuTile_Created,
                    global::LightSwitchApplication.MenuTile.DetailsClass.__MenuTile_AllowSaveWithErrors);
            private static global::LightSwitchApplication.MenuTile __MenuTile_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.MenuTile> es)
            {
                return new global::LightSwitchApplication.MenuTile(es);
            }
            private static void __MenuTile_Created(global::LightSwitchApplication.MenuTile e)
            {
                e.MenuTile_Created();
            }
            private static bool __MenuTile_AllowSaveWithErrors(global::LightSwitchApplication.MenuTile e)
            {
                bool result = false;
                e.MenuTile_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.MenuTile.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<int>> Order
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Order) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> TileColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.TileColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> Size
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Size) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> OnClick
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.OnClick) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> StatusBgColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.StatusBgColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> StatusFgColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.StatusFgColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> Badge
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Badge) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> BadgeBgColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.BadgeBgColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> BadgeFgColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.BadgeFgColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> IconBgColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.IconBgColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> IconFgColor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.IconFgColor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> PermissionId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.PermissionId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Menu> Menu
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Menu) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Menu>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Icon> Icon
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Icon) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Icon>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Permission> Permission
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Permission) as global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Permission>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new global::System.Nullable<int> Order { get; set; }
                new string TileColor { get; set; }
                new string Type { get; set; }
                new string Name { get; set; }
                new string Size { get; set; }
                new string OnClick { get; set; }
                new string Status { get; set; }
                new string StatusBgColor { get; set; }
                new string StatusFgColor { get; set; }
                new string Badge { get; set; }
                new string BadgeBgColor { get; set; }
                new string BadgeFgColor { get; set; }
                new string IconBgColor { get; set; }
                new string IconFgColor { get; set; }
                new string PermissionId { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Menu { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Icon { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, int>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<int>>.Entry
                    Order = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Order",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Order_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Order_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Order_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Order_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Order_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Order_OnValueChanged);
                private static void _Order_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Order, sf);
                }
                private static bool _Order_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Order_IsReadOnly(ref result);
                    return result;
                }
                private static void _Order_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Order_Validate(r);
                }
                private static global::System.Nullable<int> _Order_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Order;
                }
                private static void _Order_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Order = v;
                }
                private static void _Order_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Order_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    TileColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "TileColor",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._TileColor_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._TileColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._TileColor_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._TileColor_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._TileColor_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._TileColor_OnValueChanged);
                private static void _TileColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._TileColor, sf);
                }
                private static bool _TileColor_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.TileColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _TileColor_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TileColor_Validate(r);
                }
                private static string _TileColor_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.TileColor;
                }
                private static void _TileColor_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TileColor = v;
                }
                private static void _TileColor_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.TileColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    Size = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "Size",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Size_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Size_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Size_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Size_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Size_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Size_OnValueChanged);
                private static void _Size_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Size, sf);
                }
                private static bool _Size_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Size_IsReadOnly(ref result);
                    return result;
                }
                private static void _Size_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Size_Validate(r);
                }
                private static string _Size_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Size;
                }
                private static void _Size_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Size = v;
                }
                private static void _Size_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Size_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    OnClick = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "OnClick",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._OnClick_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._OnClick_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._OnClick_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._OnClick_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._OnClick_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._OnClick_OnValueChanged);
                private static void _OnClick_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._OnClick, sf);
                }
                private static bool _OnClick_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.OnClick_IsReadOnly(ref result);
                    return result;
                }
                private static void _OnClick_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OnClick_Validate(r);
                }
                private static string _OnClick_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.OnClick;
                }
                private static void _OnClick_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.OnClick = v;
                }
                private static void _OnClick_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.OnClick_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    StatusBgColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "StatusBgColor",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusBgColor_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusBgColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusBgColor_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusBgColor_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusBgColor_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusBgColor_OnValueChanged);
                private static void _StatusBgColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._StatusBgColor, sf);
                }
                private static bool _StatusBgColor_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.StatusBgColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _StatusBgColor_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StatusBgColor_Validate(r);
                }
                private static string _StatusBgColor_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.StatusBgColor;
                }
                private static void _StatusBgColor_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StatusBgColor = v;
                }
                private static void _StatusBgColor_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.StatusBgColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    StatusFgColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "StatusFgColor",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusFgColor_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusFgColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusFgColor_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusFgColor_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusFgColor_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._StatusFgColor_OnValueChanged);
                private static void _StatusFgColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._StatusFgColor, sf);
                }
                private static bool _StatusFgColor_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.StatusFgColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _StatusFgColor_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StatusFgColor_Validate(r);
                }
                private static string _StatusFgColor_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.StatusFgColor;
                }
                private static void _StatusFgColor_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StatusFgColor = v;
                }
                private static void _StatusFgColor_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.StatusFgColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    Badge = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "Badge",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Badge_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Badge_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Badge_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Badge_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Badge_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Badge_OnValueChanged);
                private static void _Badge_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Badge, sf);
                }
                private static bool _Badge_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Badge_IsReadOnly(ref result);
                    return result;
                }
                private static void _Badge_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Badge_Validate(r);
                }
                private static string _Badge_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Badge;
                }
                private static void _Badge_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Badge = v;
                }
                private static void _Badge_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Badge_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    BadgeBgColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "BadgeBgColor",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeBgColor_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeBgColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeBgColor_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeBgColor_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeBgColor_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeBgColor_OnValueChanged);
                private static void _BadgeBgColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._BadgeBgColor, sf);
                }
                private static bool _BadgeBgColor_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.BadgeBgColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _BadgeBgColor_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BadgeBgColor_Validate(r);
                }
                private static string _BadgeBgColor_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.BadgeBgColor;
                }
                private static void _BadgeBgColor_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BadgeBgColor = v;
                }
                private static void _BadgeBgColor_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.BadgeBgColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    BadgeFgColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "BadgeFgColor",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeFgColor_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeFgColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeFgColor_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeFgColor_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeFgColor_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._BadgeFgColor_OnValueChanged);
                private static void _BadgeFgColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._BadgeFgColor, sf);
                }
                private static bool _BadgeFgColor_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.BadgeFgColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _BadgeFgColor_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BadgeFgColor_Validate(r);
                }
                private static string _BadgeFgColor_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.BadgeFgColor;
                }
                private static void _BadgeFgColor_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BadgeFgColor = v;
                }
                private static void _BadgeFgColor_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.BadgeFgColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    IconBgColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "IconBgColor",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconBgColor_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconBgColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconBgColor_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconBgColor_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconBgColor_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconBgColor_OnValueChanged);
                private static void _IconBgColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._IconBgColor, sf);
                }
                private static bool _IconBgColor_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.IconBgColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _IconBgColor_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IconBgColor_Validate(r);
                }
                private static string _IconBgColor_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.IconBgColor;
                }
                private static void _IconBgColor_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IconBgColor = v;
                }
                private static void _IconBgColor_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.IconBgColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    IconFgColor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "IconFgColor",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconFgColor_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconFgColor_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconFgColor_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconFgColor_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconFgColor_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._IconFgColor_OnValueChanged);
                private static void _IconFgColor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._IconFgColor, sf);
                }
                private static bool _IconFgColor_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.IconFgColor_IsReadOnly(ref result);
                    return result;
                }
                private static void _IconFgColor_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IconFgColor_Validate(r);
                }
                private static string _IconFgColor_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.IconFgColor;
                }
                private static void _IconFgColor_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IconFgColor = v;
                }
                private static void _IconFgColor_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.IconFgColor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    PermissionId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "PermissionId",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._PermissionId_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._PermissionId_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._PermissionId_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._PermissionId_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._PermissionId_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._PermissionId_OnValueChanged);
                private static void _PermissionId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._PermissionId, sf);
                }
                private static bool _PermissionId_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.PermissionId_IsReadOnly(ref result);
                    return result;
                }
                private static void _PermissionId_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PermissionId_Validate(r);
                }
                private static string _PermissionId_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.PermissionId;
                }
                private static void _PermissionId_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PermissionId = v;
                }
                private static void _PermissionId_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.PermissionId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Menu>.Entry
                    Menu = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Menu>.Entry(
                        "Menu",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Menu_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Menu_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Menu_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Menu_GetCoreImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Menu_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Menu_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Menu_Refresh,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Menu_OnValueChanged);
                private static void _Menu_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Menu>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Menu, sf);
                }
                private static bool _Menu_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Menu_IsReadOnly(ref result);
                    return result;
                }
                private static void _Menu_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Menu_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Menu_GetCoreImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Menu;
                }
                private static global::LightSwitchApplication.Menu _Menu_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Menu, global::LightSwitchApplication.Menu.DetailsClass>(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Menu, ref d._Menu);
                }
                private static void _Menu_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, global::LightSwitchApplication.Menu v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Menu, ref d._Menu, (i, ev) => i.Menu = ev, v);
                }
                private static void _Menu_Refresh(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Menu, ref d._Menu);
                }
                private static void _Menu_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Menu_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Icon>.Entry
                    Icon = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Icon>.Entry(
                        "Icon",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Icon_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Icon_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Icon_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Icon_GetCoreImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Icon_GetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Icon_SetImplementationValue,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Icon_Refresh,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Icon_OnValueChanged);
                private static void _Icon_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Icon>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Icon, sf);
                }
                private static bool _Icon_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Icon_IsReadOnly(ref result);
                    return result;
                }
                private static void _Icon_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Icon_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Icon_GetCoreImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.ImplementationEntity.Icon;
                }
                private static global::LightSwitchApplication.Icon _Icon_GetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Icon, global::LightSwitchApplication.Icon.DetailsClass>(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Icon, ref d._Icon);
                }
                private static void _Icon_SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass d, global::LightSwitchApplication.Icon v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Icon, ref d._Icon, (i, ev) => i.Icon = ev, v);
                }
                private static void _Icon_Refresh(global::LightSwitchApplication.MenuTile.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties.Icon, ref d._Icon);
                }
                private static void _Icon_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Icon_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Permission>.Entry
                    Permission = new global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Permission>.Entry(
                        "Permission",
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Permission_Stub,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Permission_ComputeIsReadOnly,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Permission_Validate,
                        global::LightSwitchApplication.MenuTile.DetailsClass.PropertySetProperties._Permission_OnValueChanged);
                private static void _Permission_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MenuTile.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Permission>.Data> c, global::LightSwitchApplication.MenuTile.DetailsClass d, object sf)
                {
                    c(d, ref d._Permission, sf);
                }
                private static bool _Permission_ComputeIsReadOnly(global::LightSwitchApplication.MenuTile e)
                {
                    bool result = false;
                    e.Permission_IsReadOnly(ref result);
                    return result;
                }
                private static void _Permission_Validate(global::LightSwitchApplication.MenuTile e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Permission_Validate(r);
                }
                private static void _Permission_OnValueChanged(global::LightSwitchApplication.MenuTile e)
                {
                    e.Permission_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<int>>.Data _Order;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _TileColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _Size;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _OnClick;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _StatusBgColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _StatusFgColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _Badge;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _BadgeBgColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _BadgeFgColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _IconBgColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _IconFgColor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _PermissionId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Menu>.Data _Menu;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Icon>.Data _Icon;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityVirtualReferenceProperty<global::LightSwitchApplication.MenuTile, global::LightSwitchApplication.MenuTile.DetailsClass, global::LightSwitchApplication.Permission>.Data _Permission;
            
        }
    
        #endregion
    }
    
    #endregion
}
