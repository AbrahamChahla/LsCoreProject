

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class RoleAssignment : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the RoleAssignment entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RoleAssignment()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RoleAssignment(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.RoleAssignment> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.RoleAssignment.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleAssignment_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleAssignment_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UserName
        {
            get
            {
                return global::LightSwitchApplication.RoleAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.UserName);
            }
            set
            {
                global::LightSwitchApplication.RoleAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.UserName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RoleName
        {
            get
            {
                return global::LightSwitchApplication.RoleAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.RoleName);
            }
            set
            {
                global::LightSwitchApplication.RoleAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.RoleName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RoleName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SourceAccountName
        {
            get
            {
                return global::LightSwitchApplication.RoleAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccountName);
            }
            set
            {
                global::LightSwitchApplication.RoleAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccountName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceAccountName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceAccountName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceAccountName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.UserRegistration User
        {
            get
            {
                return global::LightSwitchApplication.RoleAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.User);
            }
            set
            {
                global::LightSwitchApplication.RoleAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.User, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.UserRegistration SourceAccount
        {
            get
            {
                return global::LightSwitchApplication.RoleAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccount);
            }
            set
            {
                global::LightSwitchApplication.RoleAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccount, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceAccount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceAccount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceAccount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Role Role
        {
            get
            {
                return global::LightSwitchApplication.RoleAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.Role);
            }
            set
            {
                global::LightSwitchApplication.RoleAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.Role, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.RoleAssignment,
                global::LightSwitchApplication.RoleAssignment.DetailsClass,
                global::LightSwitchApplication.RoleAssignment.DetailsClass.IImplementation,
                global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.UserName;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass>.Entry
                __RoleAssignmentEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass>.Entry(
                    global::LightSwitchApplication.RoleAssignment.DetailsClass.__RoleAssignment_CreateNew,
                    global::LightSwitchApplication.RoleAssignment.DetailsClass.__RoleAssignment_Created,
                    global::LightSwitchApplication.RoleAssignment.DetailsClass.__RoleAssignment_AllowSaveWithErrors);
            private static global::LightSwitchApplication.RoleAssignment __RoleAssignment_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.RoleAssignment> es)
            {
                return new global::LightSwitchApplication.RoleAssignment(es);
            }
            private static void __RoleAssignment_Created(global::LightSwitchApplication.RoleAssignment e)
            {
                e.RoleAssignment_Created();
            }
            private static bool __RoleAssignment_AllowSaveWithErrors(global::LightSwitchApplication.RoleAssignment e)
            {
                bool result = false;
                e.RoleAssignment_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string> UserName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.UserName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string> RoleName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.RoleName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string> SourceAccountName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccountName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration> User
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.User) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration> SourceAccount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccount) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.Role> Role
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.Role) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.Role>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string UserName { get; set; }
                new string RoleName { get; set; }
                new string SourceAccountName { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation User { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SourceAccount { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Role { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Entry
                    UserName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Entry(
                        "UserName",
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._UserName_Stub,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._UserName_ComputeIsReadOnly,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._UserName_Validate,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._UserName_GetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._UserName_SetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._UserName_OnValueChanged);
                private static void _UserName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RoleAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RoleAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._UserName, sf);
                }
                private static bool _UserName_ComputeIsReadOnly(global::LightSwitchApplication.RoleAssignment e)
                {
                    bool result = false;
                    e.UserName_IsReadOnly(ref result);
                    return result;
                }
                private static void _UserName_Validate(global::LightSwitchApplication.RoleAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UserName_Validate(r);
                }
                private static string _UserName_GetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.UserName;
                }
                private static void _UserName_SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UserName = v;
                }
                private static void _UserName_OnValueChanged(global::LightSwitchApplication.RoleAssignment e)
                {
                    e.UserName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Entry
                    RoleName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Entry(
                        "RoleName",
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._RoleName_Stub,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._RoleName_ComputeIsReadOnly,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._RoleName_Validate,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._RoleName_GetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._RoleName_SetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._RoleName_OnValueChanged);
                private static void _RoleName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RoleAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RoleAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._RoleName, sf);
                }
                private static bool _RoleName_ComputeIsReadOnly(global::LightSwitchApplication.RoleAssignment e)
                {
                    bool result = false;
                    e.RoleName_IsReadOnly(ref result);
                    return result;
                }
                private static void _RoleName_Validate(global::LightSwitchApplication.RoleAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RoleName_Validate(r);
                }
                private static string _RoleName_GetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.RoleName;
                }
                private static void _RoleName_SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.RoleName = v;
                }
                private static void _RoleName_OnValueChanged(global::LightSwitchApplication.RoleAssignment e)
                {
                    e.RoleName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Entry
                    SourceAccountName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Entry(
                        "SourceAccountName",
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccountName_Stub,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccountName_ComputeIsReadOnly,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccountName_Validate,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccountName_GetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccountName_SetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccountName_OnValueChanged);
                private static void _SourceAccountName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RoleAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Data> c, global::LightSwitchApplication.RoleAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._SourceAccountName, sf);
                }
                private static bool _SourceAccountName_ComputeIsReadOnly(global::LightSwitchApplication.RoleAssignment e)
                {
                    bool result = false;
                    e.SourceAccountName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SourceAccountName_Validate(global::LightSwitchApplication.RoleAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SourceAccountName_Validate(r);
                }
                private static string _SourceAccountName_GetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.SourceAccountName;
                }
                private static void _SourceAccountName_SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SourceAccountName = v;
                }
                private static void _SourceAccountName_OnValueChanged(global::LightSwitchApplication.RoleAssignment e)
                {
                    e.SourceAccountName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>.Entry
                    User = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>.Entry(
                        "User",
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._User_Stub,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._User_ComputeIsReadOnly,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._User_Validate,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._User_GetCoreImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._User_GetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._User_SetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._User_Refresh,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._User_OnValueChanged);
                private static void _User_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RoleAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>.Data> c, global::LightSwitchApplication.RoleAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._User, sf);
                }
                private static bool _User_ComputeIsReadOnly(global::LightSwitchApplication.RoleAssignment e)
                {
                    bool result = false;
                    e.User_IsReadOnly(ref result);
                    return result;
                }
                private static void _User_Validate(global::LightSwitchApplication.RoleAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.User_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _User_GetCoreImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.User;
                }
                private static global::LightSwitchApplication.UserRegistration _User_GetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.UserRegistration, global::LightSwitchApplication.UserRegistration.DetailsClass>(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.User, ref d._User);
                }
                private static void _User_SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d, global::LightSwitchApplication.UserRegistration v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.User, ref d._User, (i, ev) => i.User = ev, v);
                }
                private static void _User_Refresh(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.User, ref d._User);
                }
                private static void _User_OnValueChanged(global::LightSwitchApplication.RoleAssignment e)
                {
                    e.User_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>.Entry
                    SourceAccount = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>.Entry(
                        "SourceAccount",
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccount_Stub,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccount_ComputeIsReadOnly,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccount_Validate,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccount_GetCoreImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccount_GetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccount_SetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccount_Refresh,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._SourceAccount_OnValueChanged);
                private static void _SourceAccount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RoleAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>.Data> c, global::LightSwitchApplication.RoleAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._SourceAccount, sf);
                }
                private static bool _SourceAccount_ComputeIsReadOnly(global::LightSwitchApplication.RoleAssignment e)
                {
                    bool result = false;
                    e.SourceAccount_IsReadOnly(ref result);
                    return result;
                }
                private static void _SourceAccount_Validate(global::LightSwitchApplication.RoleAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SourceAccount_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SourceAccount_GetCoreImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.SourceAccount;
                }
                private static global::LightSwitchApplication.UserRegistration _SourceAccount_GetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.UserRegistration, global::LightSwitchApplication.UserRegistration.DetailsClass>(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccount, ref d._SourceAccount);
                }
                private static void _SourceAccount_SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d, global::LightSwitchApplication.UserRegistration v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccount, ref d._SourceAccount, (i, ev) => i.SourceAccount = ev, v);
                }
                private static void _SourceAccount_Refresh(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.SourceAccount, ref d._SourceAccount);
                }
                private static void _SourceAccount_OnValueChanged(global::LightSwitchApplication.RoleAssignment e)
                {
                    e.SourceAccount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.Role>.Entry
                    Role = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.Role>.Entry(
                        "Role",
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._Role_Stub,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._Role_ComputeIsReadOnly,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._Role_Validate,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._Role_GetCoreImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._Role_GetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._Role_SetImplementationValue,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._Role_Refresh,
                        global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties._Role_OnValueChanged);
                private static void _Role_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RoleAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.Role>.Data> c, global::LightSwitchApplication.RoleAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._Role, sf);
                }
                private static bool _Role_ComputeIsReadOnly(global::LightSwitchApplication.RoleAssignment e)
                {
                    bool result = false;
                    e.Role_IsReadOnly(ref result);
                    return result;
                }
                private static void _Role_Validate(global::LightSwitchApplication.RoleAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Role_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Role_GetCoreImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.Role;
                }
                private static global::LightSwitchApplication.Role _Role_GetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Role, global::LightSwitchApplication.Role.DetailsClass>(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.Role, ref d._Role);
                }
                private static void _Role_SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass d, global::LightSwitchApplication.Role v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.Role, ref d._Role, (i, ev) => i.Role = ev, v);
                }
                private static void _Role_Refresh(global::LightSwitchApplication.RoleAssignment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.RoleAssignment.DetailsClass.PropertySetProperties.Role, ref d._Role);
                }
                private static void _Role_OnValueChanged(global::LightSwitchApplication.RoleAssignment e)
                {
                    e.Role_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Data _UserName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Data _RoleName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, string>.Data _SourceAccountName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>.Data _User;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.UserRegistration>.Data _SourceAccount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.RoleAssignment, global::LightSwitchApplication.RoleAssignment.DetailsClass, global::LightSwitchApplication.Role>.Data _Role;
            
        }
    
        #endregion
    }
    
    #endregion
}
